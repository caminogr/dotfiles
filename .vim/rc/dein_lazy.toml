[[plugins]]
repo = 'ianks/vim-tsx'
on_ft = ['tsx']

# # highlight es6 syntax
# [[plugins]]
# repo = 'othree/yajs.vim'
# on_ft = ['javascript', 'jsx']

# highlight jsx syntax
[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript', 'jsx', 'tsx']
hook_add = '''
  let g:vim_jsx_pretty_highlight_close_tag = 1
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'scss', 'javascript', 'vue', 'php']

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = ['InsertEnter']
on_ft = 'snippet'
hook_add = '''
  let g:neosnippet#snippets_directory = '~/.vim/snippets/'
  nmap <leader>s :NeoSnippetEdit<cr>

  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
   \ "\<Plug>(neosnippet_expand_or_jump)"
   \: pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
   \ "\<Plug>(neosnippet_expand_or_jump)"
   \: "\<TAB>"
'''

[[plugins]]
repo = 'galooshi/vim-import-js'
on_ft = ['javascript', 'jsx']

# [[plugins]]
# repo = 'tpope/vim-endwise'
# on_ft = 'rb'

# checker
[[plugins]]
repo = 'w0rp/ale' 
on_ft = ['vue', 'typescript', 'tsx', 'typescript', 'javascript', 'jsx', 'vim', 'php']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']
hook_add = '''
  set iskeyword+=$
  set iskeyword+=-
'''

[[plugins]]
repo = 'iloginow/vim-stylus'
on_ft = ['styl', 'vue']

# [[plugins]]
# repo = 'osyo-manga/vim-marching'
# on_ft = ['cpp']

# vueのlsp serverがあまり補完が強くないので使用
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
do = ':UpdateRemotePlugins'
on_event = ['InsertEnter']
on_ft = ['javascript', 'vue', 'typescript', 'tsx' ]
hook_add = '''
  set runtimepath+=~/.vim/dein/repos/github.com/Shougo/deoplete.nvim
  let g:deoplete#enable_at_startup = 1
  call deoplete#custom#var('tabnine', {
  \ 'line_limit': 500,
  \ 'max_num_results': 10,
  \ })
'''

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
# on_ft = ['typescript', 'javascript', 'vue', 'html']
on_event = ['InsertEnter']
depends = ['deoplete.nvim']
build = './install.sh'

[[plugins]]
repo='pdavydov108/vim-lsp-cquery'
on_ft = ['cpp']
hook_add='''
	autocmd FileType c,cc,cpp,cxx,h,hpp nnoremap <leader>fv :LspCqueryDerived<CR>
	autocmd FileType c,cc,cpp,cxx,h,hpp nnoremap <leader>fc :LspCqueryCallers<CR>
	autocmd FileType c,cc,cpp,cxx,h,hpp nnoremap <leader>fb :LspCqueryBase<CR>
	autocmd FileType c,cc,cpp,cxx,h,hpp nnoremap <leader>fi :LspCqueryVars<CR>
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
on_ft = ['typescript', 'vue', 'cpp']

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
on_ft = ['typescript', 'vue', 'cpp']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
  let g:vim_markdown_new_list_item_indent = 0
'''
  # let g:vim_markdown_new_list_item_indent = 1

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = ['InsertEnter']
# hook_add = '''
  # call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': '{', 'input': '{'})
# '''

[[plugins]]
repo='mattn/sonictemplate-vim'
on_event= ['CmdlineEnter']

[[plugins]]
repo = 'tikhomirov/vim-glsl'
on_ft = ['frag', 'glsl']

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
hook_post_source = '''
  let g:quickrun_config = {}
  let g:quickrun_config['_'] = {
      \  'runner' : 'vimproc',
      \  'runner/vimproc/updatetime' : 40,
      \  'outputter/buffer/split'          : ':botright 8sp',
      \  'outputter/buffer/running_mark'   : '[running...]',
      \}

  let g:quickrun_config['cv'] = {
    \   'type'  : 'cpp',
    \   'command' : 'g++',
    \   'cmdopt'  : '`pkg-config --cflags --libs opencv4` -std=c++11',
    \}
'''

# カーソル位置のコンテキストに合わせてftを切り替える
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft = ['vue', 'html', 'scss']
